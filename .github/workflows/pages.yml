name: Build & Deploy Jekyll (docs)

on:
  push:
    branches: ["develop"]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure GitHub Pages
        uses: actions/configure-pages@v5

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true  # uses your Gemfile + Gemfile.lock

      - name: Install gems
        run: bundle install --jobs 4 --retry 3

      # --- Verification steps so you can SEE the versions used ---
      - name: Show Bundler environment
        run: bundle env

      - name: Show key gem versions
        run: |
          bundle exec ruby -e 'puts "Jekyll: #{Gem.loaded_specs["jekyll"].version}"'
          bundle exec ruby -e 'puts "Just-the-Docs: #{Gem.loaded_specs["just-the-docs"].version}"'
          bundle exec ruby -e 'puts "jekyll-seo-tag: #{Gem.loaded_specs["jekyll-seo-tag"].version}"'
      

      - name: Build site with Jekyll (source=docs, dest=_site)
        run: bundle exec jekyll build --source docs --destination _site

      # Optional: sanity-check that SEO tag rendered on your home page, if it exists
      - name: Check SEO tag in built HTML (optional)
        run: |
          if [ -f "_site/index.html" ]; then
            echo "Searching for SEO meta tags in _site/index.html"
            grep -E '<meta property="og:|<meta name="twitter:' _site/index.html || true
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
