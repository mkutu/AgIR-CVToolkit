# Configuration for training stage
# Training hyperparameters
seed: 42
max_epochs: 100
batch_size: 8
num_workers: 4
pin_memory: true

# Enable/disable augmentation and normalization
use_data_augmentation: true
use_data_normalization: false

# If true, automatically run preprocessing before training
# Set to false if you've already preprocessed data
auto_preprocess: true

# GPU configuration
use_multi_gpu: false
gpu:
  max_gpus: 1
  exclude_ids: [0]

# Model architecture
model:
  arch_name: "Unet"
  encoder_name: "resnet34"
  encoder_weights: "imagenet"
  in_channels: 3
  classes: 1
  decoder_attention_type: null  # null, "scse", etc.
  encoder_freeze: false

# Optimizer
optimizer:
  _target_: torch.optim.Adam
  lr: 0.001
  weight_decay: 0.0001

# Learning rate scheduler
scheduler:
  _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
  mode: "min"
  factor: 0.5
  patience: 5
  min_lr: 0.00001

# Checkpointing
checkpoint:
  monitor: "val_loss"
  mode: "min"
  save_top_k: 3
  save_last: true

# Early stopping
early_stop:
  monitor: "val_loss"
  mode: "min"
  patience: 10

# PyTorch Lightning Trainer
trainer:
  accelerator: "auto"
  precision: "32"
  deterministic: false
  strategy: "auto"

# Loggers
logger:
  csv:
    _target_: pytorch_lightning.loggers.CSVLogger
    save_dir: 
    name: "csv_logs"
    enable: true
  
  wandb:
    _target_: pytorch_lightning.loggers.WandbLogger
    project: "agir-segmentation"
    name:
    save_dir: 
    enable: false

# Visualization during training
dataloader_visualizer:
  enabled: false
  num_samples: 4

augmentation_visualizer:
  enabled: false
  num_samples: 4

# Data paths (automatically set by preprocessing, or manually specify)
# If auto_preprocess=true, these are set automatically
# If auto_preprocess=false, you must set these manually
train_images_dir: # ${paths.run_root}/train/images
train_masks_dir: # ${paths.run_root}/train/masks
val_images_dir: # ${paths.run_root}/val/images
val_masks_dir: # ${paths.run_root}/val/masks
test_images_dir: # ${paths.run_root}/test/images
test_masks_dir: # ${paths.run_root}/test/masks

# Dataset statistics directory (for normalization)
# Set automatically if preprocessing computes stats
project_datastats_dir: #${paths.run_root}/datastats